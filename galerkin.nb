(***********************************************************************                    Mathematica-Compatible NotebookThis notebook can be used on any computer system with Mathematica 4.0,MathReader 4.0, or any compatible application. The data for the notebook starts with the line containing stars above.To get the notebook into a Mathematica-compatible application, do one of the following:* Save the data starting with the line of stars above into a file  with a name ending in .nb, then open the file inside the application;* Copy the data starting with the line of stars above to the  clipboard, then use the Paste menu command inside the application.Data for notebooks contains only printable 7-bit ASCII and can besent directly in email or through ftp in text mode.  Newlines can beCR, LF or CRLF (Unix, Macintosh or MS-DOS style).NOTE: If you modify the data for this notebook not in a Mathematica-compatible application, you must delete the line below containing the word CacheID, otherwise Mathematica-compatible applications may try to use invalid cache data.For more information on notebooks and Mathematica-compatible applications, contact Wolfram Research:  web: http://www.wolfram.com  email: info@wolfram.com  phone: +1-217-398-0700 (U.S.)Notebook reader applications are available free of charge from Wolfram Research.***********************************************************************)(*CacheID: 232*)(*NotebookFileLineBreakTestNotebookFileLineBreakTest*)(*NotebookOptionsPosition[     59269,       1536]*)(*NotebookOutlinePosition[     60324,       1570]*)(*  CellTagsIndexPosition[     60280,       1566]*)(*WindowFrame->Normal*)Notebook[{Cell[CellGroupData[{Cell[TextData[{  "Chapter 9\n",  StyleBox["Weighted Residual Methods",    FontWeight->"Plain"]}], "Title",  ImageRegion->{{0, 1}, {0, 1}}],Cell[CellGroupData[{Cell["Implementation", "Section",  ImageRegion->{{0, 1}, {0, 1}}],Cell["\<\Galerkin::usage=\"Galerkin[p,q,s,f,eff,l1,l2] \\rsolves the equation \\r \\r   p u'' + q u' + s u + f = 0. \\r \\r eff is the list of parameters in the approximate solution. \\r l1 and l2 are the endpoints of the interval.\\r \\r\";\\>", "Input",  ImageRegion->{{0, 1}, {0, 1}}],Cell[CellGroupData[{Cell[BoxData[    \(\(?Galerkin\)\)], "Input"],Cell[BoxData[    \("Galerkin[p,q,s,f,eff,l1,l2] \r solves the equation \r \r    p u'' + q \u' + s u + f = 0. \r \r  eff is the list of parameters in the approximate \solution. \r  l1 and l2 are the endpoints of the interval.\r \r"\)], "Print"]}, Open  ]],Cell["\<\Galerkin[p_,q_,s_,f_,eff_,l1_,l2_]:=\tModule[{phi1,phi2,du,ddu,r,F1,F2,d},\t\t\td=u[x];\t\tFor[i=1, i<=Length[eff], i++,\t\t\td=D[d,x];\t\t\tdu[i] = d;\t\t\t(* Print[\"du[\",i,\"]=\",du[i]]; *)\t\t];\t\t\tr = - p du[2] - q du[1] -s u[x] - f;\t\t\t(* Print[\"r=\",r]; *)\t\t\tF = {};\t\tFor[i=1, i<=Length[eff], i++,\t\t\tphi[i] = Coefficient[u[x],eff[[i]]];\t\t\t(* Print[\"phi[\",i,\"]=\",phi[i]]; *)\t\t\tAppendTo[F,Integrate[Simplify[phi[i] r],{x,l1,l2}]==0];\t\t\t(* Print[\"F[\",i,\"]=\",F[i]]; *)\t\t];\t\t\tFlatten[Solve[F,eff]]\t\t];\\>", "Input",  ImageRegion->{{0, 1}, {0, 1}}]}, Closed]],Cell[CellGroupData[{Cell["u''+ u + x = 0,         0 < x < 1,       u = 0 at 0, 1", "Section",  ImageRegion->{{0, 1}, {0, 1}}],Cell["Apply BC and enter the equation in the form shown below.", "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14],Cell["\<\In this example,p = 1, q = 0, s = 1, f = x, eff = {a,b}, l1=0, l2=1, where l1 and l2 are the endpoints of the interval, eff is the list of the parameters in the approximate solution.\\>", "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14],Cell["\<\    Clear[a,b,x,u,coeffs];u[x_] := Expand[x (1 - x) (a + b x) ]\\>", "Input",  ImageRegion->{{0, 1}, {0, 1}}],Cell[CellGroupData[{Cell[BoxData[    \(u[x]\)], "Input"],Cell[BoxData[    \(a\ x - a\ x\^2 + b\ x\^2 - b\ x\^3\)], "Output"]}, Open  ]],Cell[CellGroupData[{Cell[BoxData[    \(coeffs = Galerkin[1, 0, 1, x, {a, b}, 0, 1]\)], "Input"],Cell[BoxData[    \({a \[Rule] 71\/369, b \[Rule] 7\/41}\)], "Output"]}, Open  ]],Cell[CellGroupData[{Cell[BoxData[    \(u[x] /. coeffs\)], "Input"],Cell[BoxData[    \(\(71\ x\)\/369 - \(8\ x\^2\)\/369 - \(7\ x\^3\)\/41\)], "Output"]}, Open  ]],Cell[CellGroupData[{Cell["determination of exact solution", "Subsection",  ImageRegion->{{0, 1}, {0, 1}}],Cell[TextData[{  "The auxillary equation of the homogeneous linear differential equation \with constant coefficients,\n\n",  StyleBox["u'' + u = 0\n\n",    FontSlant->"Italic"],  "is ",  StyleBox["m^2 = -1.\n\n",    FontSlant->"Italic"],  "with roots ",  StyleBox["m = +/- I",    FontSlant->"Italic"],  " .\n",  StyleBox["\n",    FontSlant->"Italic"],  "The complementary function is the general solution:\n\n",  StyleBox["yc = c[1] Sin[x] + c[2] Cos[x]",    FontSlant->"Italic"],  ".\n\n Using the method of undetermined coefficients one can show that a \particular integral is given by:\n \n",  StyleBox[" yp = -x.\n \n ",    FontSlant->"Italic"],  "Thus the general solution of the differential equation under consideration \is:\n \n",  StyleBox[" c[1] Sin[x] + c[2] Cos[x] - x",    FontSlant->"Italic"],  "."}], "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14],Cell["", "Input",  ImageRegion->{{0, 1}, {0, 1}}],Cell["We determine the coefficients c1 and c2 below.", "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14],Cell["g[x_]:=c1 Sin[x] + c2 Cos[x] - x", "Input",  ImageRegion->{{0, 1}, {0, 1}}],Cell["Check that g[x] satisfies the given differential equation.", "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14],Cell[CellGroupData[{Cell[BoxData[    \(\(g''\)[x] + g[x] + x\)], "Input"],Cell[BoxData[    \(0\)], "Output"]}, Open  ]],Cell["Check BC.", "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14],Cell[CellGroupData[{Cell[BoxData[    \(g[0]\)], "Input"],Cell[BoxData[    \(c2\)], "Output"]}, Open  ]],Cell["Thus c2=0.", "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14],Cell[CellGroupData[{Cell[BoxData[    \(g[1]\)], "Input"],Cell[BoxData[    \(\(-1\) + c2\ Cos[1] + c1\ Sin[1]\)], "Output"]}, Open  ]],Cell[CellGroupData[{Cell[BoxData[    \(Solve[\(-1\) + c1\ Sin[1] \[Equal] 0, c1]\)], "Input"],Cell[BoxData[    \({{c1 \[Rule] Csc[1]}}\)], "Output"]}, Open  ]],Cell[TextData[{  "Thus c1 = Csc[1], and it follows that the exact solution is:\n\n",  StyleBox["Csc[1] Sin[x] - x.",    FontSlant->"Italic"],  ""}], "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14]}, Closed]],Cell[CellGroupData[{Cell["Comparison of approximate and exact solutions", "Subsection",  ImageRegion->{{0, 1}, {0, 1}}],Cell[CellGroupData[{Cell[BoxData[{    \(\(solntable =         Table[N[{x, u[x] /. coeffs // N, Csc[1]\ Sin[x] - x}], {x, 0,             1,  .2}];\)\n\), "\n",     \(Join[{{"\<x\>", "\<Approx\>", "\<Exact\>"}}, solntable] //       TableForm\)}], "Input"],Cell[BoxData[    TagBox[GridBox[{          {"\<\"x\"\>", "\<\"Approx\"\>", "\<\"Exact\"\>"},          {"0.`", "0.`", "0.`"},          {"0.2`", "0.03624932249322494`", "0.036097660385065344`"},          {"0.4`", "0.0625691056910569`", "0.06278285209982937`"},          {"0.6000000000000001`", "0.07076422764227641`",             "0.07101835189711314`"},          {"0.8`", "0.052639566395663945`", "0.05250246752511789`"},          {"1.`", "0.`", "0.`"}          },        RowSpacings->1,        ColumnSpacings->3,        RowAlignments->Baseline,        ColumnAlignments->{Left}],      (TableForm[ #]&)]], "Output"]}, Open  ]],Cell[CellGroupData[{Cell[BoxData[    \(ListPlot[Map[{#[\([1]\)], #[\([2]\)] - #[\([3]\)]} &, solntable],       PlotJoined \[Rule] True,       AxesLabel \[Rule] {"\<x\>", "\<Error\>"}]\)], "Input"],Cell[GraphicsData["PostScript", "\<\%!%%Creator: Mathematica%%AspectRatio: .61803 MathPictureStart/Mabs {Mgmatrix idtransformMtmatrix dtransform} bind def/Mabsadd { Mabs3 -1 roll add3 1 roll addexch } bind def%% Graphics%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10  scalefont  setfont% Scaling calculations0.0238095 0.952381 0.383329 1450.53 [[.21429 .37083 -9 -9 ][.21429 .37083 9 0 ][.40476 .37083 -9 -9 ][.40476 .37083 9 0 ][.59524 .37083 -9 -9 ][.59524 .37083 9 0 ][.78571 .37083 -9 -9 ][.78571 .37083 9 0 ][.97619 .37083 -3 -9 ][.97619 .37083 3 0 ][1.025 .38333 0 -6 ][1.025 .38333 10 6 ][.01131 .09322 -42 -4.5 ][.01131 .09322 0 4.5 ][.01131 .23828 -42 -4.5 ][.01131 .23828 0 4.5 ][.01131 .52838 -36 -4.5 ][.01131 .52838 0 4.5 ][.02381 .64303 -17 0 ][.02381 .64303 17 12 ][ 0 0 0 0 ][ 1 .61803 0 0 ]] MathScale% Start of Graphics1 setlinecap1 setlinejoinnewpath0 g.25 Mabswid[ ] 0 setdash.21429 .38333 m.21429 .38958 Ls[(0.2)] .21429 .37083 0 1 Mshowa.40476 .38333 m.40476 .38958 Ls[(0.4)] .40476 .37083 0 1 Mshowa.59524 .38333 m.59524 .38958 Ls[(0.6)] .59524 .37083 0 1 Mshowa.78571 .38333 m.78571 .38958 Ls[(0.8)] .78571 .37083 0 1 Mshowa.97619 .38333 m.97619 .38958 Ls[(1)] .97619 .37083 0 1 Mshowa.125 Mabswid.07143 .38333 m.07143 .38708 Ls.11905 .38333 m.11905 .38708 Ls.16667 .38333 m.16667 .38708 Ls.2619 .38333 m.2619 .38708 Ls.30952 .38333 m.30952 .38708 Ls.35714 .38333 m.35714 .38708 Ls.45238 .38333 m.45238 .38708 Ls.5 .38333 m.5 .38708 Ls.54762 .38333 m.54762 .38708 Ls.64286 .38333 m.64286 .38708 Ls.69048 .38333 m.69048 .38708 Ls.7381 .38333 m.7381 .38708 Ls.83333 .38333 m.83333 .38708 Ls.88095 .38333 m.88095 .38708 Ls.92857 .38333 m.92857 .38708 Ls.25 Mabswid0 .38333 m1 .38333 Lsgsave1.025 .38333 -61 -10 Mabsadd m1 1 Mabs scalecurrentpoint translate/MISOfy{    /newfontname exch def    /oldfontname exch def    oldfontname findfont    dup length dict begin        {1 index /FID ne {def} {pop pop} ifelse} forall        /Encoding ISOLatin1Encoding def        currentdict    end    newfontname exch definefont pop} def0 20 translate 1 -1 scale63.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor0.000 0.000 rmoveto63.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor(x) show69.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor0.000 0.000 rmoveto1.000 setlinewidthgrestore.02381 .09322 m.03006 .09322 Ls[(-0.0002)] .01131 .09322 1 0 Mshowa.02381 .23828 m.03006 .23828 Ls[(-0.0001)] .01131 .23828 1 0 Mshowa.02381 .52838 m.03006 .52838 Ls[(0.0001)] .01131 .52838 1 0 Mshowa.125 Mabswid.02381 .12223 m.02756 .12223 Ls.02381 .15124 m.02756 .15124 Ls.02381 .18026 m.02756 .18026 Ls.02381 .20927 m.02756 .20927 Ls.02381 .26729 m.02756 .26729 Ls.02381 .2963 m.02756 .2963 Ls.02381 .32531 m.02756 .32531 Ls.02381 .35432 m.02756 .35432 Ls.02381 .41234 m.02756 .41234 Ls.02381 .44135 m.02756 .44135 Ls.02381 .47036 m.02756 .47036 Ls.02381 .49937 m.02756 .49937 Ls.02381 .06421 m.02756 .06421 Ls.02381 .0352 m.02756 .0352 Ls.02381 .00619 m.02756 .00619 Ls.02381 .55739 m.02756 .55739 Ls.02381 .5864 m.02756 .5864 Ls.02381 .61541 m.02756 .61541 Ls.25 Mabswid.02381 0 m.02381 .61803 Lsgsave.02381 .64303 -78 -4 Mabsadd m1 1 Mabs scalecurrentpoint translate/MISOfy{    /newfontname exch def    /oldfontname exch def    oldfontname findfont    dup length dict begin        {1 index /FID ne {def} {pop pop} ifelse} forall        /Encoding ISOLatin1Encoding def        currentdict    end    newfontname exch definefont pop} def0 20 translate 1 -1 scale63.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor0.000 0.000 rmoveto63.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor(Error) show93.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor0.000 0.000 rmoveto1.000 setlinewidthgrestore0 0 m1 0 L1 .61803 L0 .61803 Lclosepathclipnewpath.5 Mabswid.02381 .38333 m.21429 .60332 L.40476 .07328 L.59524 .01472 L.78571 .58219 L.97619 .38333 Ls% End of GraphicsMathPictureEnd\\>"], "Graphics",  ImageSize->{288, 177.938},  ImageMargins->{{43, 0}, {0, 0}},  ImageRegion->{{0, 1}, {0, 1}},  ImageCache->GraphicsData["Bitmap", "\<\CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00o`3ooolQ0?ooo`00;03oool00`000000oooo0?ooo`3a0?ooo`00;03oool00`000000oooo0?ooo`3a0?ooo`00;03oool200000?80oooo000/0?ooo`030000003oool0oooo0?40oooo000/0?ooo`030000003oool0oooo0800oooo0`00001^0?ooo`00;03oool00`000000oooo0?ooo`1m0?ooo`<000000P3oool00`000000oooo0?ooo`1/0?ooo`00;03oool00`000000oooo0?ooo`1j0?ooo`<000001P3oool00`000000oooo0?ooo`1[0?ooo`00;03oool00`000000oooo0?ooo`1f0?ooo`@000002@3oool00`000000oooo0?ooo`1[0?ooo`00;03oool00`000000oooo0?ooo`1c0?ooo`<000003@3oool00`000000oooo0?ooo`1[0?ooo`00;03oool200000700oooo1000000A0?ooo`030000003oool0oooo06X0oooo000/0?ooo`030000003oool0oooo06`0oooo0`00000E0?ooo`030000003oool0oooo06X0oooo000/0?ooo`030000003oool0oooo06T0oooo0`00000H0?ooo`030000003oool0oooo06X0oooo000/0?ooo`030000003oool0oooo06D0oooo1000000L0?ooo`030000003oool0oooo06T0oooo000/0?ooo`030000003oool0oooo0680oooo0`00000P0?ooo`030000003oool0oooo06T0oooo000/0?ooo`030000003oool0oooo05h0oooo1000000S0?ooo`030000003oool0oooo06T0oooo000/0?ooo`800000G03oool3000002P0oooo00<000000?ooo`3oool0J03oool002`0oooo00<000000?ooo`3oool0F03oool3000002/0oooo00<000000?ooo`3oool0J03oool002`0oooo00<000000?ooo`3oool0EP3oool2000002h0oooo00<000000?ooo`3oool0J03oool002`0oooo00<000000?ooo`3oool0EP3oool00`000000oooo0?ooo`0^0?ooo`030000003oool0oooo06L0oooo000/0?ooo`030000003oool0oooo05D0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`1W0?ooo`00203oool2000000@0oooo00<000000?ooo`3oool00`3oool2000000@0oooo0P0000040?ooo`8000000P3oool5000000<0oooo00<000000?ooo`3oool0E@3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo06L0oooo00070?ooo`040000003oool0oooo000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000000`3oool00`000000oooo0?ooo`1E0?ooo`030000003oool0oooo0300oooo00<000000?ooo`3oool0IP3oool000D000000P3oool010000000oooo0?ooo`0000080?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000030?ooo`030000003oool0oooo00<0oooo0`00001D0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool0IP3oool000L0oooo00@000000?ooo`3oool00000203oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool00000103oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo05@0oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`1V0?ooo`001`3oool010000000oooo0?ooo`0000080?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000000P3oool01P000000oooo0?ooo`000000oooo000000<0oooo00D000000?ooo`3oool0oooo0000001F0?ooo`030000003oool0oooo0380oooo00<000000?ooo`3oool0I@3oool000L0oooo00@000000?ooo`3oool00000203oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo00000080oooo00H000000?ooo`3oool000000?ooo`0000030?ooo`050000003oool0oooo0?ooo`000000E@3oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo06D0oooo00080?ooo`8000002P3oool2000000@0oooo0P0000040?ooo`8000000`3oool3000000@0oooo00<000000?ooo`3oool0D`3oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo06D0oooo000/0?ooo`030000003oool0oooo05<0oooo00<000000?ooo`3oool0=03oool00`000000oooo0?ooo`1T0?ooo`00;03oool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo03D0oooo00<000000?ooo`3oool0I03oool002`0oooo0P00001C0?ooo`030000003oool0oooo03D0oooo00<000000?ooo`3oool0I03oool002`0oooo00<000000?ooo`3oool0DP3oool00`000000oooo0?ooo`0f0?ooo`030000003oool0oooo06<0oooo000/0?ooo`030000003oool0oooo0540oooo00<000000?ooo`3oool0=`3oool00`000000oooo0?ooo`1S0?ooo`00;03oool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3oool0H`3oool002`0oooo00<000000?ooo`3oool0D03oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo0680oooo000/0?ooo`030000003oool0oooo0500oooo00<000000?ooo`3oool0>@3oool00`000000oooo0?ooo`1R0?ooo`00;03oool00`000000oooo0?ooo`1@0?ooo`030000003oool0oooo03T0oooo00<000000?ooo`3oool0HP3oool002`0oooo0P00001@0?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0H@3oool002`0oooo00<000000?ooo`3oool0C`3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo0640oooo000/0?ooo`030000003oool0oooo04l0oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`1Q0?ooo`00;03oool00`000000oooo0?ooo`1>0?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3oool0H03oool002`0oooo00<000000?ooo`3oool0CP3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo0600oooo000/0?ooo`030000003oool0oooo04h0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`1P0?ooo`00;03oool2000004h0oooo00<000000?ooo`3oool0?`3oool00`000000oooo0?ooo`1O0?ooo`00;03oool00`000000oooo0?ooo`1=0?ooo`030000003oool0oooo03l0oooo00<000000?ooo`3oool0G`3oool002`0oooo00<000000?ooo`3oool0C@3oool00`000000oooo0?ooo`0o0?ooo`030000003oool0oooo05l0oooo000/0?ooo`030000003oool0oooo04`0oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`1N0?ooo`00;03oool00`000000oooo0?ooo`1<0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0GP3oool002`0oooo00<000000?ooo`3oool0B`3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo05h0oooo000/0?ooo`030000003oool0oooo04/0oooo00<000000?ooo`3oool0@`3oool00`000000oooo0?ooo`1M0?ooo`00;03oool2000004`0oooo00<000000?ooo`3oool0@`3oool00`000000oooo0?ooo`1M0?ooo`00;03oool00`000000oooo0?ooo`1:0?ooo`030000003oool0oooo04@0oooo00<000000?ooo`3oool0G@3oool002`0oooo00<000000?ooo`3oool0BP3oool00`000000oooo0?ooo`150?ooo`030000003oool0oooo05`0oooo000/0?ooo`030000003oool0oooo04X0oooo00<000000?ooo`3oool0A@3oool00`000000oooo0?ooo`1L0?ooo`00203oool2000000@0oooo00<000000?ooo`3oool00`3oool2000000@0oooo0P0000040?ooo`8000000`3oool3000000@0oooo00<000000?ooo`3oool0B@3oool00`000000oooo0?ooo`160?ooo`030000003oool0oooo05`0oooo00070?ooo`040000003oool0oooo000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000<0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3oool0F`3oool000D000000P3oool010000000oooo0?ooo`0000080?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000030?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0B@3oool00`000000oooo0?ooo`170?ooo`030000003oool0oooo05/0oooo00070?ooo`040000003oool0oooo000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000<0oooo00<000000?ooo`3oool00`3oool3000004P0oooo00<000000?ooo`3oool0B03oool00`000000oooo0?ooo`1K0?ooo`001`3oool010000000oooo0?ooo`0000080?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000030?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0B03oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo05X0oooo00070?ooo`040000003oool0oooo000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo00000080oooo0P0000050?ooo`030000003oool0oooo04P0oooo00<000000?ooo`3oool0B@3oool00`000000oooo0?ooo`1J0?ooo`00203oool2000000X0oooo0P0000040?ooo`800000103oool2000000@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`170?ooo`030000003oool0oooo04X0oooo00<000000?ooo`3oool0FP3oool002`0oooo00<000000?ooo`3oool0A`3oool00`000000oooo0?ooo`1;0?ooo`030000003oool0oooo05T0oooo000/0?ooo`030000003oool0oooo04H0oooo00<000000?ooo`3oool0C03oool00`000000oooo0?ooo`1I0?ooo`00;03oool2000004L0oooo00<000000?ooo`3oool0C03oool00`000000oooo0?ooo`1I0?ooo`00;03oool00`000000oooo0?ooo`160?ooo`030000003oool0oooo04d0oooo00<000000?ooo`3oool0F03oool002`0oooo00<000000?ooo`3oool0A@3oool00`000000oooo0?ooo`1>0?ooo`030000003oool0oooo05P0oooo000/0?ooo`030000003oool0oooo04D0oooo00<000000?ooo`3oool0CP3oool00`000000oooo0?ooo`1H0?ooo`00;03oool00`000000oooo0?ooo`150?ooo`030000003oool0oooo04l0oooo00<000000?ooo`3oool0E`3oool002`0oooo00<000000?ooo`3oool0A03oool00`000000oooo0?ooo`1@0?ooo`030000003oool0oooo05L0oooo000/0?ooo`030000003oool0oooo04@0oooo00<000000?ooo`3oool0D03oool00`000000oooo0?ooo`1G0?ooo`00;03oool2000004D0oooo00<000000?ooo`3oool0D@3oool00`000000oooo0?ooo`1F0?ooo`00;03oool00`000000oooo0?ooo`130?ooo`030000003oool0oooo0580oooo00<000000?ooo`3oool0EP3oool002`0oooo00<000000?ooo`3oool0@`3oool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo05H0oooo000/0?ooo`030000003oool0oooo04<0oooo00<000000?ooo`3oool0D`3oool00`000000oooo0?ooo`1E0?ooo`00;03oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo05@0oooo00<000000?ooo`3oool0E@3oool002`0oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`1D0?ooo`030000003oool0oooo05D0oooo000/0?ooo`030000003oool0oooo0440oooo00<000000?ooo`3oool0EP3oool00`000000oooo0?ooo`1D0?ooo`00;03oool200000480oooo00<000000?ooo`3oool0EP3oool00`000000oooo0?ooo`1D0?ooo`00;03oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo05H0oooo00<000000?ooo`3oool0E03oool002`0oooo00<000000?ooo`3oool08`3oool2000000@0oooo00@000000?ooo`3oool0oooo1@00000>0?ooo`030000003oool0oooo00`0oooo0P0000040?ooo`030000003oool0oooo00<0oooo0`00000M0?ooo`800000103oool00`000000oooo0?ooo`020?ooo`<000004P3oool00`000000oooo0?ooo`090?ooo`800000103oool00`000000oooo0?ooo`020?ooo`<000008`3oool3000001H0oooo000/0?ooo`030000003oool0oooo0280oooo00@000000?ooo`3oool00000203oool010000000oooo0?ooo`00000>0?ooo`030000003oool0oooo00/0oooo00@000000?ooo`3oool000002P3oool00`000000oooo0?ooo`0K0?ooo`040000003oool0oooo000000L0oooo00D000000?ooo`3oool0oooo0000000A0?ooo`030000003oool0oooo00P0oooo00@000000?ooo`3oool000001`3oool01@000000oooo0?ooo`3oool0000002<0oooo00<000000?ooo`3oool05@3oool002`0oooo00<000000?ooo`3oool08P3oool010000000oooo0?ooo`0000090?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool02`3oool010000000oooo0?ooo`0000070?ooo`D00000703oool010000000oooo0?ooo`0000070?ooo`050000003oool0oooo0?ooo`0000004@3oool00`000000oooo0?ooo`080?ooo`040000003oool0oooo000000L0oooo00D000000?ooo`3oool0oooo0000000S0?ooo`030000003oool0oooo01D0oooo000/0?ooo`030000003oool0oooo0280oooo00@000000?ooo`3oool000002P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo00`0oooo00@000000?ooo`3oool000001`3oool010000000oooo0?ooo`00000M0?ooo`040000003oool0oooo000000L0oooo1000000C0?ooo`030000003oool0oooo00L0oooo00@000000?ooo`3oool00000203oool3000002@0oooo00<000000?ooo`3oool05@3oool002`0oooo00<000000?ooo`3oool08P3oool010000000oooo0?ooo`0000070?ooo`050000003oool0oooo0?ooo`0000003@3oool00`000000oooo0?ooo`0<0?ooo`040000003oool0oooo000000P0oooo00<000000?ooo`0000007@3oool010000000oooo0?ooo`0000070?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3oool01`3oool010000000oooo0?ooo`0000070?ooo`050000003oool0oooo0?ooo`0000008`3oool00`000000oooo0?ooo`0E0?ooo`00;03oool2000002<0oooo00@000000?ooo`3oool000001`3oool01@000000oooo0?ooo`3oool0000000d0oooo00<000000?ooo`3oool0303oool010000000oooo0?ooo`0000090?ooo`8000007@3oool010000000oooo0?ooo`0000080?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool01`3oool010000000oooo0?ooo`0000070?ooo`050000003oool0oooo0?ooo`0000008P3oool2000001L0oooo000/0?ooo`030000003oool0oooo02<0oooo0P0000090?ooo`<000003@3oool00`000000oooo0?ooo`0>0?ooo`8000002`3oool00`000000oooo0?ooo`0L0?ooo`8000002P3oool2000001@0oooo00<000000?ooo`3oool01`3oool2000000T0oooo0`00000T0?ooo`030000003oool0oooo01D0oooo000/0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3oool0G03oool00`000000oooo0?ooo`1A0?ooo`00;03oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo05d0oooo00<000000?ooo`3oool0D@3oool002`0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`1N0?ooo`030000003oool0oooo04L0oooo0P0000000`3oool00000000000040?ooo`00;03oool00`000000oooo0?ooo`0m0?ooo`030000003oool0oooo05h0oooo00<000000?ooo`3oool0B03oool00`000000oooo000000050?ooo`009`3ooooY000000T0oooo00<000000?ooo`3oool0103oool002`0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00@0oooo00D000000?ooo`3oool0oooo0000000:0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0103oool01@000000oooo0?ooo`3oool0000000X0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0<0?ooo`030000003oool0000000D0oooo000/0?ooo`800000:`3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool0:@3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0:03oool2000000d0oooo0P0000000`3oool00000000000040?ooo`00;03oool00`000000oooo0000000k0?ooo`030000003oool0oooo0640oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`0F0?ooo`00;03oool010000000oooo0?ooo`00000j0?ooo`030000003oool0oooo0680oooo00<000000?ooo`3oool0=03oool00`000000oooo0?ooo`0G0?ooo`00;03oool01@000000oooo0?ooo`3oool0000003T0oooo00<000000?ooo`3oool0HP3oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo01P0oooo000/0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0=@3oool00`000000oooo0?ooo`1S0?ooo`030000003oool0oooo0380oooo00<000000?ooo`3oool06@3oool002`0oooo0P0000040?ooo`030000003oool0oooo03@0oooo00<000000?ooo`3oool0I03oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo01X0oooo000/0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0<`3oool00`000000oooo0?ooo`1T0?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool06`3oool002`0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo06D0oooo00<000000?ooo`3oool0;P3oool00`000000oooo0?ooo`0L0?ooo`00;03oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool0IP3oool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo01d0oooo000/0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0;`3oool00`000000oooo0?ooo`1W0?ooo`030000003oool0oooo02/0oooo00<000000?ooo`3oool07P3oool002`0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0^0?ooo`030000003oool0oooo06L0oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`0O0?ooo`00;03oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo02d0oooo00<000000?ooo`3oool0J03oool00`000000oooo0?ooo`0X0?ooo`030000003oool0oooo0200oooo000/0?ooo`8000002P3oool00`000000oooo0?ooo`0[0?ooo`030000003oool0oooo06T0oooo00<000000?ooo`3oool09`3oool00`000000oooo0?ooo`0Q0?ooo`00;03oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo02X0oooo00<000000?ooo`3oool0J@3oool00`000000oooo0?ooo`0V0?ooo`030000003oool0oooo0280oooo000/0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0:@3oool00`000000oooo0?ooo`1Z0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool08`3oool002`0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0W0?ooo`030000003oool0oooo06/0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`00;03oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo02L0oooo00<000000?ooo`3oool0J`3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo02D0oooo000/0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool09P3oool00`000000oooo0?ooo`1/0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool09P3oool002`0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo06d0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0W0?ooo`00;03oool200000100oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`1]0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool0:03oool002`0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo06h0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`0Y0?ooo`00;03oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0K`3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo02X0oooo000/0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`1_0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool0:P3oool002`0oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo0740oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0[0?ooo`00;03oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool0L@3oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo02`0oooo000/0?ooo`8000005@3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo0740oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0]0?ooo`00;03oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0L`3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo02h0oooo000/0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`1c0?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3oool0;`3oool002`0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo07<0oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`0`0?ooo`00203oool2000000@0oooo00<000000?ooo`3oool00`3oool2000000@0oooo0P0000040?ooo`8000000`3oool3000000@0oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0a0?ooo`001`3oool010000000oooo0?ooo`0000080?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000030?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0b0?ooo`001`3oool010000000oooo0?ooo`0000080?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000030?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo07D0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0c0?ooo`001`3oool010000000oooo0?ooo`0000080?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000030?ooo`030000003oool0oooo00<0oooo0`00000K0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0M`3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo03@0oooo00070?ooo`040000003oool0oooo000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000<0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0M`3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo03D0oooo00070?ooo`040000003oool0oooo000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo00000080oooo0P0000050?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`1g0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0=P3oool000P0oooo0P00000:0?ooo`800000103oool2000000@0oooo0P0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo07T0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0g0?ooo`00;03oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo03P0oooo000/0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`1j0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0>@3oool002`0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo07/0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0j0?ooo`00;03oool200000280oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`1k0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0>`3oool002`0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0l0?ooo`00;03oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0O@3oool01@000000oooo0?ooo`3oool0000003l0oooo000/0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`1m0?ooo`040000003oool0oooo00000400oooo000/0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`1n0?ooo`030000003oool000000440oooo000/0?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`1o0?ooo`030000003oool0oooo0400oooo000/0?ooo`8000009`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0<80oooo000/0?ooo`030000003oool0oooo02L0oooo00D000000?ooo`3oool0oooo000000350?ooo`00;03oool00`000000oooo0?ooo`0X0?ooo`040000003oool0oooo00000<D0oooo000/0?ooo`030000003oool0oooo02T0oooo00<000000?ooo`000000a@3oool002`0oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`340?ooo`00;03oool00`000000oooo0?ooo`3a0?ooo`00;03oool00`000000oooo0?ooo`3a0?ooo`00;03oool200000?80oooo000/0?ooo`030000003oool0oooo0?40oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo000M0?ooo`D0000000@0oooo00000000000000000`3oool3000000@0oooo0`0000020?ooo`<00000j03oool001h0oooo00@000000?ooo`3oool000000P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0>L0oooo000N0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`3W0?ooo`007P3oool3000000<0oooo0P0000040?ooo`8000000`3oool01@000000oooo0?ooo`3oool000000080oooo0P00003X0?ooo`007P3oool00`000000oooo0?ooo`020?ooo`80000000@0oooo000000000000oooo0P0000000`3oool00000000000020?ooo`<000000P3oool2000000030?ooo`00000000000>H0oooo000N0?ooo`040000003oool0oooo00000?h0oooo000M0?ooo`D00000oP3oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00?l0oooo8@3oool00001\\>"],  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-0.20336, -0.000287862, \0.0045293, 2.97382*^-6}}],Cell[BoxData[    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),      False,      Editable->False]], "Output"]}, Open  ]]}, Closed]]}, Closed]],Cell[CellGroupData[{Cell["u' - u = 0,                 0 < x < 1,          u'[0] = 1", "Section",  ImageRegion->{{0, 1}, {0, 1}}],Cell[TextData[{  "The problem has an exact solution: u=Exp[x].\n\nA suitable approximate \solution is:\n\n",  StyleBox["y = 1 + Sum[a[j] x^j,{j,1,N}]",    FontSlant->"Italic"]}], "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14],Cell["\<\Clear[a,b,x,u];u[x_] := 1+ a x + b x^2+ c x^3\\>", "Input",  ImageRegion->{{0, 1}, {0, 1}}],Cell[CellGroupData[{Cell["u[0]", "Input",  ImageRegion->{{0, 1}, {0, 1}}],Cell[BoxData[    \(1\)], "Output"]}, Open  ]],Cell[TextData[{  "The approximate solution satisfies the boundary condtion. The coefficients \a[j] are constants. Substitution into (9.44) produces the residual\n\n",  StyleBox["r = -1 + Sum[a[j] ( j x^(j-1)-x^j),{j,1,N}]",    FontSlant->"Italic"]}], "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14],Cell[CellGroupData[{Cell[BoxData[    \(coeffs = Galerkin[0, 1, \(-1\), 0, {a, b, c}, 0, 1]\)], "Input"],Cell[BoxData[    \({a \[Rule] 30\/29, b \[Rule] 45\/116, c \[Rule] 35\/116}\)], "Output"]}, Open  ]],Cell[CellGroupData[{Cell[BoxData[    \(u[x] /. coeffs // N\)], "Input"],Cell[BoxData[    \(\(\(1.`\)\(\[InvisibleSpace]\)\) + 1.0344827586206897`\ x +       0.3879310344827586`\ x\^2 + 0.3017241379310345`\ x\^3\)], "Output"]}, Open  ]],Cell[TextData[{  "The columns in the table, given below, contain the values of ",  StyleBox["x",    FontSlant->"Italic"],  ", the approximate solution, and the exact solution, respectively."}], "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14],Cell[BoxData[    \(solntable :=       Table[N[{x, u[x] /. coeffs // N, Exp[x]}], {x, 0, 1, 0.2}]\)], "Input"],Cell[CellGroupData[{Cell[BoxData[    \(TableForm[solntable,       TableHeadings \[Rule] {None, {"\<x\>", "\<Approx\>", "\<Exact\>"}}]\)], \"Input"],Cell[BoxData[    TagBox[GridBox[{          {"\<\"x\"\>", "\<\"Approx\"\>", "\<\"Exact\"\>"},          {"0.`", "1.`", "1.`"},          {"0.2`", "1.2248275862068965`", "1.2214027581601699`"},          {"0.4`", "1.4951724137931033`", "1.4918246976412703`"},          {"0.6000000000000001`", "1.8255172413793106`",             "1.822118800390509`"},          {"0.8`", "2.230344827586207`", "2.225540928492468`"},          {"1.`", "2.724137931034482`", "2.718281828459045`"}          },        RowSpacings->1,        ColumnSpacings->3,        RowAlignments->Baseline,        ColumnAlignments->{Left}],      (TableForm[ #, TableHeadings -> {None, {"x", "Approx",         "Exact"}}]&)]], "Output"]}, Open  ]],Cell["The solution error is plotted in the figure below.", "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14],Cell[CellGroupData[{Cell[BoxData[    \(ListPlot[Map[{#[\([1]\)], #[\([2]\)] - #[\([3]\)]} &, solntable],       PlotJoined \[Rule] True,       AxesLabel \[Rule] {"\<x\>", "\<Error\>"}]\)], "Input"],Cell[GraphicsData["PostScript", "\<\%!%%Creator: Mathematica%%AspectRatio: .61803 MathPictureStart/Mabs {Mgmatrix idtransformMtmatrix dtransform} bind def/Mabsadd { Mabs3 -1 roll add3 1 roll addexch } bind def%% Graphics%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10  scalefont  setfont% Scaling calculations0.0238095 0.952381 0.0147151 100.511 [[.21429 .00222 -9 -9 ][.21429 .00222 9 0 ][.40476 .00222 -9 -9 ][.40476 .00222 9 0 ][.59524 .00222 -9 -9 ][.59524 .00222 9 0 ][.78571 .00222 -9 -9 ][.78571 .00222 9 0 ][.97619 .00222 -3 -9 ][.97619 .00222 3 0 ][1.025 .01472 0 -6 ][1.025 .01472 10 6 ][.01131 .11523 -30 -4.5 ][.01131 .11523 0 4.5 ][.01131 .21574 -30 -4.5 ][.01131 .21574 0 4.5 ][.01131 .31625 -30 -4.5 ][.01131 .31625 0 4.5 ][.01131 .41676 -30 -4.5 ][.01131 .41676 0 4.5 ][.01131 .51727 -30 -4.5 ][.01131 .51727 0 4.5 ][.01131 .61778 -30 -4.5 ][.01131 .61778 0 4.5 ][.02381 .64303 -17 0 ][.02381 .64303 17 12 ][ 0 0 0 0 ][ 1 .61803 0 0 ]] MathScale% Start of Graphics1 setlinecap1 setlinejoinnewpath0 g.25 Mabswid[ ] 0 setdash.21429 .01472 m.21429 .02097 Ls[(0.2)] .21429 .00222 0 1 Mshowa.40476 .01472 m.40476 .02097 Ls[(0.4)] .40476 .00222 0 1 Mshowa.59524 .01472 m.59524 .02097 Ls[(0.6)] .59524 .00222 0 1 Mshowa.78571 .01472 m.78571 .02097 Ls[(0.8)] .78571 .00222 0 1 Mshowa.97619 .01472 m.97619 .02097 Ls[(1)] .97619 .00222 0 1 Mshowa.125 Mabswid.07143 .01472 m.07143 .01847 Ls.11905 .01472 m.11905 .01847 Ls.16667 .01472 m.16667 .01847 Ls.2619 .01472 m.2619 .01847 Ls.30952 .01472 m.30952 .01847 Ls.35714 .01472 m.35714 .01847 Ls.45238 .01472 m.45238 .01847 Ls.5 .01472 m.5 .01847 Ls.54762 .01472 m.54762 .01847 Ls.64286 .01472 m.64286 .01847 Ls.69048 .01472 m.69048 .01847 Ls.7381 .01472 m.7381 .01847 Ls.83333 .01472 m.83333 .01847 Ls.88095 .01472 m.88095 .01847 Ls.92857 .01472 m.92857 .01847 Ls.25 Mabswid0 .01472 m1 .01472 Lsgsave1.025 .01472 -61 -10 Mabsadd m1 1 Mabs scalecurrentpoint translate/MISOfy{    /newfontname exch def    /oldfontname exch def    oldfontname findfont    dup length dict begin        {1 index /FID ne {def} {pop pop} ifelse} forall        /Encoding ISOLatin1Encoding def        currentdict    end    newfontname exch definefont pop} def0 20 translate 1 -1 scale63.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor0.000 0.000 rmoveto63.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor(x) show69.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor0.000 0.000 rmoveto1.000 setlinewidthgrestore.02381 .11523 m.03006 .11523 Ls[(0.001)] .01131 .11523 1 0 Mshowa.02381 .21574 m.03006 .21574 Ls[(0.002)] .01131 .21574 1 0 Mshowa.02381 .31625 m.03006 .31625 Ls[(0.003)] .01131 .31625 1 0 Mshowa.02381 .41676 m.03006 .41676 Ls[(0.004)] .01131 .41676 1 0 Mshowa.02381 .51727 m.03006 .51727 Ls[(0.005)] .01131 .51727 1 0 Mshowa.02381 .61778 m.03006 .61778 Ls[(0.006)] .01131 .61778 1 0 Mshowa.125 Mabswid.02381 .03482 m.02756 .03482 Ls.02381 .05492 m.02756 .05492 Ls.02381 .07502 m.02756 .07502 Ls.02381 .09512 m.02756 .09512 Ls.02381 .13533 m.02756 .13533 Ls.02381 .15543 m.02756 .15543 Ls.02381 .17553 m.02756 .17553 Ls.02381 .19564 m.02756 .19564 Ls.02381 .23584 m.02756 .23584 Ls.02381 .25594 m.02756 .25594 Ls.02381 .27604 m.02756 .27604 Ls.02381 .29615 m.02756 .29615 Ls.02381 .33635 m.02756 .33635 Ls.02381 .35645 m.02756 .35645 Ls.02381 .37656 m.02756 .37656 Ls.02381 .39666 m.02756 .39666 Ls.02381 .43686 m.02756 .43686 Ls.02381 .45696 m.02756 .45696 Ls.02381 .47707 m.02756 .47707 Ls.02381 .49717 m.02756 .49717 Ls.02381 .53737 m.02756 .53737 Ls.02381 .55748 m.02756 .55748 Ls.02381 .57758 m.02756 .57758 Ls.02381 .59768 m.02756 .59768 Ls.25 Mabswid.02381 0 m.02381 .61803 Lsgsave.02381 .64303 -78 -4 Mabsadd m1 1 Mabs scalecurrentpoint translate/MISOfy{    /newfontname exch def    /oldfontname exch def    oldfontname findfont    dup length dict begin        {1 index /FID ne {def} {pop pop} ifelse} forall        /Encoding ISOLatin1Encoding def        currentdict    end    newfontname exch definefont pop} def0 20 translate 1 -1 scale63.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor0.000 0.000 rmoveto63.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor(Error) show93.000 13.000 moveto%%IncludeResource: font Courier%%IncludeFont: Courier/Courier findfont 10.000 scalefont[1 0 0 -1 0 0 ] makefont setfont0.000 0.000 0.000 setrgbcolor0.000 0.000 rmoveto1.000 setlinewidthgrestore0 0 m1 0 L1 .61803 L0 .61803 Lclosepathclipnewpath.5 Mabswid.02381 .01472 m.21429 .35895 L.40476 .3512 L.59524 .3563 L.78571 .49756 L.97619 .60332 Ls% End of GraphicsMathPictureEnd\\>"], "Graphics",  ImageSize->{288, 177.938},  ImageMargins->{{43, 0}, {0, 0}},  ImageRegion->{{0, 1}, {0, 1}},  ImageCache->GraphicsData["Bitmap", "\<\CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40004P0000/B000`400?l00000o`00003oo`3ooolQ0?ooo`00B03oool2000000@0oooo00@000000?ooo`3oool0oooo1@00000O0?ooo`800000103oool00`000000oooo0?ooo`030?ooo`<00000803oool2000000@0oooo00<000000?ooo`3oool00P3oool300000200oooo0P0000040?ooo`030000003oool0oooo0080oooo0`00000U0?ooo`<000005`3oool004L0oooo00@000000?ooo`3oool00000203oool010000000oooo0?ooo`00000N0?ooo`040000003oool0oooo000000X0oooo00<000000?ooo`3oool07P3oool010000000oooo0?ooo`0000070?ooo`050000003oool0oooo0?ooo`0000007P3oool010000000oooo0?ooo`0000070?ooo`050000003oool0oooo0?ooo`0000009@3oool00`000000oooo0?ooo`0F0?ooo`00A`3oool010000000oooo0?ooo`0000090?ooo`030000003oool0oooo01h0oooo00@000000?ooo`3oool000001`3oool5000001l0oooo00@000000?ooo`3oool000001`3oool01@000000oooo0?ooo`3oool0000001h0oooo00@000000?ooo`3oool000001`3oool01@000000oooo0?ooo`3oool0000002D0oooo00<000000?ooo`3oool05P3oool004L0oooo00@000000?ooo`3oool000002P3oool00`000000oooo0?ooo`0M0?ooo`040000003oool0oooo000000L0oooo00@000000?ooo`3oool00000803oool010000000oooo0?ooo`0000070?ooo`@000007`3oool010000000oooo0?ooo`0000080?ooo`<000009P3oool00`000000oooo0?ooo`0F0?ooo`00A`3oool010000000oooo0?ooo`0000070?ooo`050000003oool0oooo0?ooo`0000007P3oool010000000oooo0?ooo`0000080?ooo`030000003oool000000200oooo00@000000?ooo`3oool000001`3oool00`000000oooo0?ooo`0P0?ooo`040000003oool0oooo000000L0oooo00D000000?ooo`3oool0oooo0000000U0?ooo`030000003oool0oooo01H0oooo00170?ooo`040000003oool0oooo000000L0oooo00D000000?ooo`3oool0oooo0000000N0?ooo`040000003oool0oooo000000T0oooo0P00000P0?ooo`040000003oool0oooo000000P0oooo00<000000?ooo`3oool07`3oool010000000oooo0?ooo`0000070?ooo`050000003oool0oooo0?ooo`000000903oool2000001P0oooo00180?ooo`8000002@3oool300000200oooo0P00000;0?ooo`030000003oool0oooo01l0oooo0P00000:0?ooo`800000803oool2000000T0oooo0`00000V0?ooo`030000003oool0oooo01H0oooo000Q0?ooo`030000003oool0oooo0?`0oooo000Q0?ooo`030000003oool0oooo0?`0oooo000Q0?ooo`030000003oool0oooo0?80oooo0P0000000`3oool00000000000050?ooo`008@3oool00`000000oooo0?ooo`3c0?ooo`030000003oool0000000H0oooo000K0?oooo@000002@3oool00`000000oooo0?ooo`050?ooo`008@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0303oool00`000000oooo000000060?ooo`008@3oool200000?<0oooo0P0000000`3oool00000000000050?ooo`008@3oool200000?d0oooo000Q0?ooo`<00000o03oool00240oooo00<000000?ooo`000000o03oool00240oooo00@000000?ooo`3oool00000n`3oool00240oooo00D000000?ooo`3oool0oooo0000003j0?ooo`008@3oool01@000000oooo0?ooo`3oool000000?X0oooo000Q0?ooo`8000000`3oool00`000000oooo0?ooo`3g0?ooo`008@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0?L0oooo000Q0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0mP3oool00240oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`3f0?ooo`008@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0?D0oooo000Q0?ooo`8000001@3oool00`000000oooo0?ooo`3e0?ooo`008@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0?@0oooo000Q0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0l`3oool00240oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`3c0?ooo`008@3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0?80oooo000Q0?ooo`800000203oool00`000000oooo0?ooo`3b0?ooo`008@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0?40oooo000Q0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0l@3oool00080oooo0P0000040?ooo`030000003oool0oooo00<0oooo0P0000040?ooo`8000000`3oool3000000D0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`3`0?ooo`0000D0oooo0000003oool0oooo000000080?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000000`3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0l03oool000050?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000<0oooo00<000000?ooo`3oool0103oool2000000/0oooo00<000000?ooo`3oool0k`3oool000050?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000<0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo0>h0oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000030?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`3^0?ooo`0000D0oooo0000003oool0oooo000000080?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000000P3oool2000000H0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`3]0?ooo`000P3oool2000000X0oooo0P0000040?ooo`800000103oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0k@3oool00240oooo0P00000>0?ooo`030000003oool0oooo0>`0oooo000Q0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0k03oool00240oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`3[0?ooo`008@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0>/0oooo000Q0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0jP3oool00240oooo0P00000A0?ooo`030000003oool0oooo0>T0oooo000Q0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0j@3oool00240oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`3X0?ooo`008@3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0>P0oooo000Q0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0i`3oool00240oooo0P00000C0?ooo`030000003oool0oooo0>L0oooo000Q0?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool0iP3oool00240oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`3V0?ooo`008@3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo0>D0oooo000Q0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool0i03oool00240oooo0P00000F0?ooo`030000003oool0oooo0>@0oooo000Q0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool0h`3oool00080oooo0P0000040?ooo`030000003oool0oooo00<0oooo0P0000040?ooo`8000000P3oool5000000@0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`3S0?ooo`0000D0oooo0000003oool0oooo000000080?ooo`040000003oool0oooo00000080oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool0hP3oool000050?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000<0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo0>80oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo0P00000I0?ooo`030000003oool0oooo0>40oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool01P000000oooo0?ooo`000000oooo000000<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo0>40oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool01P000000oooo0?ooo`000000oooo000000<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo0>00oooo00020?ooo`8000002P3oool2000000@0oooo0P0000030?ooo`<000001@3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo0=l0oooo000Q0?ooo`8000006`3oool00`000000oooo0?ooo`3O0?ooo`008@3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo0=h0oooo000Q0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool0gP3oool00240oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`3M0?ooo`008@3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo0=d0oooo000Q0?ooo`8000007P3oool00`000000oooo0?ooo`3L0?ooo`008@3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo0=`0oooo000Q0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool0f`3oool00240oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`3J0?ooo`008@3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo0=X0oooo000Q0?ooo`8000008@3oool00`000000oooo0?ooo`3I0?ooo`008@3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo0=T0oooo000Q0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool0f03oool00240oooo00<000000?ooo`3oool08@3oool00`000000oooo0?ooo`3H0?ooo`008@3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo0=L0oooo000Q0?ooo`8000008`3oool00`000000oooo0?ooo`3G0?ooo`008@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo0=H0oooo00020?ooo`800000103oool00`000000oooo0?ooo`030?ooo`800000103oool2000000<0oooo0`0000050?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0e@3oool000050?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000020?ooo`060000003oool0oooo0000003oool000000`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0e@3oool000050?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0U0?ooo`030000003oool0oooo0=@0oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000030?ooo`8000001@3oool2000002H0oooo00<000000?ooo`3oool0e03oool000050?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo000000D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0V0?ooo`030000003oool0oooo0=<0oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool01P000000oooo0?ooo`000000oooo000000<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0V0?ooo`030000003oool0oooo0=<0oooo00020?ooo`8000002P3oool2000000@0oooo0P0000030?ooo`<000001@3oool00`000000oooo0?ooo`0W0?ooo`030000003oool0oooo0=80oooo000Q0?ooo`030000003oool0oooo02L0oooo00<000000?ooo`3oool0dP3oool00240oooo0P00000Y0?ooo`030000003oool0oooo0=40oooo000Q0?ooo`030000003oool0oooo02T0oooo00<000000?ooo`3oool0d03oool00240oooo00<000000?ooo`3oool0:@3oool00`000000oooo0?ooo`3@0?ooo`008@3oool00`000000oooo0?ooo`0Z0?ooo`030000003oool0oooo0240oooo6000002F0?ooo`008@3oool00`000000oooo0?ooo`0Z0?ooo`030000003oool0oooo00X0oooo5`00000H0?oooaL00000O`3oool00240oooo0P00000/0?ooo``00000AP3oool=00000780oooo000Q0?ooo`030000003oool0oooo08X0oooo00<000000?ooo`3oool0K`3oool00240oooo00<000000?ooo`3oool0R`3oool00`000000oooo0?ooo`1^0?ooo`008@3oool00`000000oooo0?ooo`2<0?ooo`800000KP3oool00240oooo00<000000?ooo`3oool0SP3oool00`000000oooo0?ooo`1[0?ooo`008@3oool200000900oooo00<000000?ooo`3oool0JP3oool00240oooo00<000000?ooo`3oool0T03oool2000006X0oooo000Q0?ooo`030000003oool0oooo0980oooo00<000000?ooo`3oool0I`3oool00240oooo00<000000?ooo`3oool0T`3oool2000006L0oooo000Q0?ooo`030000003oool0oooo09D0oooo00<000000?ooo`3oool0I03oool00240oooo0P00002G0?ooo`030000003oool0oooo06<0oooo000Q0?ooo`030000003oool0oooo09L0oooo0P00001S0?ooo`000P3oool2000000@0oooo00<000000?ooo`3oool00`3oool2000000@0oooo0P0000040?ooo`<00000103oool00`000000oooo0?ooo`2I0?ooo`030000003oool0oooo0600oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0VP3oool00`000000oooo0?ooo`1O0?ooo`0000D0oooo0000003oool0oooo000000080?ooo`040000003oool0oooo00000080oooo00D000000?ooo`3oool000000?ooo`05000000@0oooo0P00002L0?ooo`800000G`3oool000050?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000020?ooo`060000003oool0oooo0000003oool000000P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo09d0oooo00<000000?ooo`3oool0G03oool000050?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000020?ooo`040000003oool0oooo00000080oooo00<000000?ooo`0000001@3oool00`000000oooo0?ooo`2N0?ooo`030000003oool0oooo05/0oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000030?ooo`8000001@3oool00`000000oooo0?ooo`2O0?ooo`800000F`3oool00080oooo0P00000:0?ooo`800000103oool2000000D0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`2Q0?ooo`030000003oool0oooo05P0oooo000Q0?ooo`800000X`3oool00`000000oooo0?ooo`1G0?ooo`008@3oool00`000000oooo0?ooo`2S0?ooo`800000E`3oool00240oooo00<000000?ooo`3oool0Y@3oool00`000000oooo0?ooo`1D0?ooo`008@3oool00`000000oooo0?ooo`2V0?ooo`030000003oool0oooo05<0oooo000Q0?ooo`030000003oool0oooo0:L0oooo0P00001C0?ooo`008@3oool200000:X0oooo00<000000?ooo`3oool0D03oool00240oooo00<000000?ooo`3oool0ZP3oool200000500oooo000Q0?ooo`030000003oool0oooo0:`0oooo00<000000?ooo`3oool0C@3oool00240oooo00<000000?ooo`3oool0[@3oool00`000000oooo0?ooo`1<0?ooo`008@3oool00`000000oooo0?ooo`2^0?ooo`800000C03oool00240oooo0P00002a0?ooo`030000003oool0oooo04T0oooo000Q0?ooo`030000003oool0oooo0;40oooo00<000000?ooo`3oool0B03oool00240oooo00<000000?ooo`3oool0/P3oool2000004P0oooo000Q0?ooo`030000003oool0oooo0;@0oooo00<000000?ooo`3oool0A@3oool00240oooo00<000000?ooo`3oool0]@3oool00`000000oooo0?ooo`140?ooo`008@3oool200000;L0oooo0P0000140?ooo`008@3oool00`000000oooo0?ooo`2h0?ooo`800000@P3oool00080oooo0P0000040?ooo`030000003oool0oooo00<0oooo0P0000040?ooo`8000000`3oool3000000D0oooo00<000000?ooo`3oool0^P3oool00`000000oooo0?ooo`0o0?ooo`0000D0oooo0000003oool0oooo000000080?ooo`040000003oool0oooo00000080oooo00H000000?ooo`3oool000000?ooo`0000030?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0^`3oool2000003l0oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000050?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0_@3oool2000003d0oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000050?ooo`030000003oool0oooo0080oooo0P0000300?ooo`800000>`3oool000050?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000020?ooo`050000003oool0oooo0000003oool0100000050?ooo`030000003oool0oooo0<40oooo0P00000i0?ooo`0000D0oooo0000003oool0oooo000000080?ooo`040000003oool0oooo00000080oooo00H000000?ooo`3oool000000?ooo`0000080?ooo`030000003oool0oooo0<<0oooo00<000000?ooo`3oool0=P3oool00080oooo0P00000:0?ooo`800000103oool200000080oooo1@0000040?ooo`030000003oool0oooo0<@0oooo0P00000f0?ooo`008@3oool00`000000oooo0?ooo`360?ooo`800000=03oool00240oooo0P0000390?ooo`800000<P3oool00240oooo00<000000?ooo`3oool0bP3oool00`000000oooo0?ooo`0_0?ooo`008@3oool00`000000oooo0?ooo`3;0?ooo`800000;`3oool00240oooo00<000000?ooo`3oool0c@3oool2000002d0oooo000Q0?ooo`030000003oool0oooo0<l0oooo0P00000[0?ooo`008@3oool200000=80oooo00<000000?ooo`3oool0:03oool00240oooo00<000000?ooo`3oool0dP3oool2000002P0oooo000Q0?ooo`030000003oool0oooo0=@0oooo0P00000V0?ooo`008@3oool00`000000oooo0?ooo`3F0?ooo`800000903oool00240oooo00<000000?ooo`3oool0f03oool200000280oooo000Q0?ooo`800000f`3oool00`000000oooo0?ooo`0O0?ooo`008@3oool00`000000oooo0?ooo`3K0?ooo`8000007`3oool00240oooo00<000000?ooo`3oool0g@3oool2000001d0oooo000Q0?ooo`030000003oool0oooo0=l0oooo0P00000K0?ooo`008@3oool200000>80oooo00<000000?ooo`3oool0603oool00240oooo00<000000?ooo`3oool0hP3oool2000001P0oooo000Q0?ooo`030000003oool0oooo0>@0oooo00<000000?ooo`3oool05@3oool00080oooo0P0000040?ooo`030000003oool0oooo00<0oooo0P0000040?ooo`8000000`3oool3000000D0oooo00<000000?ooo`3oool0o03oool000050?ooo`000000oooo0?ooo`000000203oool010000000oooo0?ooo`0000020?ooo`060000003oool0oooo0000003oool000000`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0?`0oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool01P000000oooo0?ooo`000000oooo000000<0oooo00<000000?ooo`3oool00P3oool200000?d0oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool01@000000oooo0?ooo`000000oooo00@00000o`3oool50?ooo`0000D0oooo0000003oool0oooo000000080?ooo`040000003oool0oooo00000080oooo00H000000?ooo`3oool000000?ooo`00003o0?ooo`P0oooo00001@3oool000000?ooo`3oool0000000P0oooo00@000000?ooo`3oool000000P3oool010000000oooo0?ooo`0000020?ooo`030000003oool0oooo0?l0oooo1@3oool00080oooo0P00000:0?ooo`800000103oool2000000@0oooo0P00003o0?ooo`D0oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo003o0?ooob40oooo000B0?ooo`D0000000@0oooo00000000000000000`3oool3000000@0oooo0`0000020?ooo`<00000l`3oool001<0oooo00@000000?ooo`3oool000000P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0080oooo00D000000?ooo`3oool0oooo000000020?ooo`030000003oool0oooo0?80oooo000C0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`050000003oool0oooo0?ooo`0000000P3oool00`000000oooo0?ooo`3b0?ooo`004`3oool3000000<0oooo0P0000040?ooo`8000000`3oool01@000000oooo0?ooo`3oool000000080oooo0P00003c0?ooo`004`3oool00`000000oooo0?ooo`020?ooo`80000000@0oooo000000000000oooo0P0000000`3oool00000000000020?ooo`<000000P3oool2000000030?ooo`00000000000?40oooo000C0?ooo`040000003oool0oooo00000?l0oooo2P3oool00180oooo1@00003o0?ooo`X0oooo003o0?ooob40oooo003o0?ooob40oooo0000\\>"],  ImageRangeCache->{{{0, 287}, {176.938, 0}} -> {-0.143277, -0.000492317, \0.00431492, 4.08855*^-5}}],Cell[BoxData[    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),      False,      Editable->False]], "Output"]}, Open  ]],Cell["\<\Note:For the general problem, the exact solution is not known and the solution \error cannot be calculated.The residual can be evaluated to establish the closeness to the exact \solution.\\>", "Text",  ImageRegion->{{0, 1}, {0, 1}},  FontSize->14]}, Closed]]}, Open  ]]},FrontEndVersion->"4.0 for Macintosh",ScreenRectangle->{{0, 800}, {0, 580}},WindowToolbars->{},CellGrouping->Manual,WindowSize->{627, 488},WindowMargins->{{1, Automatic}, {Automatic, 1}},PrivateNotebookOptions->{"ColorPalette"->{RGBColor, -1}},ShowCellLabel->True,ShowCellTags->False,RenderingOptions->{"ObjectDithering"->True,"RasterDithering"->False},MacintoshSystemPageSetup->"\<\00<0001804P000000]P2:?oQon82n@960dL5:0?l0080001804P000000]P2:0010000I00000400`<300000BL?00400@0000000000000006P801T1T0000000000000000000000000000000000000000000\>"](***********************************************************************Cached data follows.  If you edit this Notebook file directly, not usingMathematica, you must remove the line containing CacheID at the top of the file.  The cache data will then be recreated when you save this file from within Mathematica.***********************************************************************)(*CellTagsOutlineCellTagsIndex->{}*)(*CellTagsIndexCellTagsIndex->{}*)(*NotebookFileOutlineNotebook[{Cell[CellGroupData[{Cell[1739, 51, 143, 5, 156, "Title"],Cell[CellGroupData[{Cell[1907, 60, 66, 1, 56, "Section"],Cell[1976, 63, 294, 7, 82, "Input"],Cell[CellGroupData[{Cell[2295, 74, 46, 1, 26, "Input"],Cell[2344, 77, 246, 3, 142, "Print"]}, Open  ]],Cell[2605, 83, 617, 21, 292, "Input"]}, Closed]],Cell[CellGroupData[{Cell[3259, 109, 106, 1, 36, "Section"],Cell[3368, 112, 121, 2, 33, "Text"],Cell[3492, 116, 258, 7, 90, "Text"],Cell[3753, 125, 124, 6, 68, "Input"],Cell[CellGroupData[{Cell[3902, 135, 37, 1, 26, "Input"],Cell[3942, 138, 68, 1, 28, "Output"]}, Open  ]],Cell[CellGroupData[{Cell[4047, 144, 76, 1, 26, "Input"],Cell[4126, 147, 70, 1, 42, "Output"]}, Open  ]],Cell[CellGroupData[{Cell[4233, 153, 47, 1, 26, "Input"],Cell[4283, 156, 85, 1, 45, "Output"]}, Open  ]],Cell[CellGroupData[{Cell[4405, 162, 86, 1, 44, "Subsection"],Cell[4494, 165, 898, 28, 407, "Text"],Cell[5395, 195, 50, 1, 26, "Input"],Cell[5448, 198, 111, 2, 33, "Text"],Cell[5562, 202, 82, 1, 26, "Input"],Cell[5647, 205, 123, 2, 33, "Text"],Cell[CellGroupData[{Cell[5795, 211, 54, 1, 26, "Input"],Cell[5852, 214, 35, 1, 26, "Output"]}, Open  ]],Cell[5902, 218, 74, 2, 33, "Text"],Cell[CellGroupData[{Cell[6001, 224, 37, 1, 26, "Input"],Cell[6041, 227, 36, 1, 26, "Output"]}, Open  ]],Cell[6092, 231, 75, 2, 33, "Text"],Cell[CellGroupData[{Cell[6192, 237, 37, 1, 26, "Input"],Cell[6232, 240, 66, 1, 26, "Output"]}, Open  ]],Cell[CellGroupData[{Cell[6335, 246, 74, 1, 26, "Input"],Cell[6412, 249, 55, 1, 26, "Output"]}, Open  ]],Cell[6482, 253, 210, 7, 71, "Text"]}, Closed]],Cell[CellGroupData[{Cell[6729, 265, 100, 1, 28, "Subsection"],Cell[CellGroupData[{Cell[6854, 270, 238, 5, 71, "Input"],Cell[7095, 277, 628, 15, 133, "Output"]}, Open  ]],Cell[CellGroupData[{Cell[7760, 297, 179, 3, 41, "Input"],Cell[7942, 302, 25817, 557, 186, 4910, 294, "GraphicsData", "PostScript", \"Graphics"],Cell[33762, 861, 130, 3, 26, "Output"]}, Open  ]]}, Closed]]}, Closed]],Cell[CellGroupData[{Cell[33953, 871, 109, 1, 36, "Section"],Cell[34065, 874, 240, 7, 108, "Text"],Cell[34308, 883, 105, 5, 54, "Input"],Cell[CellGroupData[{Cell[34438, 892, 54, 1, 26, "Input"],Cell[34495, 895, 35, 1, 26, "Output"]}, Open  ]],Cell[34545, 899, 312, 7, 89, "Text"],Cell[CellGroupData[{Cell[34882, 910, 84, 1, 26, "Input"],Cell[34969, 913, 90, 1, 42, "Output"]}, Open  ]],Cell[CellGroupData[{Cell[35096, 919, 52, 1, 26, "Input"],Cell[35151, 922, 154, 2, 28, "Output"]}, Open  ]],Cell[35320, 927, 255, 7, 52, "Text"],Cell[35578, 936, 111, 2, 26, "Input"],Cell[CellGroupData[{Cell[35714, 942, 130, 3, 41, "Input"],Cell[35847, 947, 706, 16, 133, "Output"]}, Open  ]],Cell[36568, 966, 115, 2, 33, "Text"],Cell[CellGroupData[{Cell[36708, 972, 179, 3, 41, "Input"],Cell[36890, 977, 21938, 538, 186, 5468, 330, "GraphicsData", "PostScript", \"Graphics"],Cell[58831, 1517, 130, 3, 26, "Output"]}, Open  ]],Cell[58976, 1523, 265, 9, 109, "Text"]}, Closed]]}, Open  ]]}]*)(***********************************************************************End of Mathematica Notebook file.***********************************************************************)